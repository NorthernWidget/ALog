<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="md_api" kind="page">
    <compoundname>md_api</compoundname>
    <title>Summary</title>
    <detaileddescription>
<para>Members | Descriptions -----------------------------<mdash/>|------------------------------------------<mdash/> <computeroutput>define</computeroutput><ulink url="#Logger_8cpp_1ae70baf5399951da1e7ad45a0ed890832"><computeroutput>cbi</computeroutput></ulink> | <computeroutput>define</computeroutput><ulink url="#Logger_8cpp_1ac4a5536d9bf092116f88b94797ddc882"><computeroutput>sbi</computeroutput></ulink> | <computeroutput>public void</computeroutput><ulink url="#Logger_8cpp_1adee29828901ea1b4f99ce305fa3e17bd"><computeroutput>wakeUpNow</computeroutput></ulink><computeroutput>()</computeroutput> | <computeroutput>public void</computeroutput><ulink url="#Logger_8cpp_1a1a3b380e75d68eef4c3913816773e1b5"><computeroutput>wakeUpNow_tip</computeroutput></ulink><computeroutput>()</computeroutput> | <computeroutput>public void</computeroutput><ulink url="#Logger_8cpp_1a9c215a00c214c880d04481d256d8d522"><computeroutput>_ISR_void</computeroutput></ulink><computeroutput>()</computeroutput> | <computeroutput>public void</computeroutput><ulink url="#Logger_8cpp_1aa2e4ccb5b638347db4da535aac7ac209"><computeroutput>_anemometer_count_increment</computeroutput></ulink><computeroutput>()</computeroutput> | <computeroutput>public void</computeroutput><ulink url="#Logger_8cpp_1a144189fccfe80979cc2fcafefdf2728a"><computeroutput>save_Aref</computeroutput></ulink><computeroutput>(float _V)</computeroutput> | <computeroutput>public float</computeroutput><ulink url="#Logger_8cpp_1ae9bf4d0d2809a902be80dbf825844636"><computeroutput>read_Aref</computeroutput></ulink><computeroutput>()</computeroutput> | <computeroutput>public void</computeroutput><ulink url="#Logger_8cpp_1a7551515cf6f018df3d8d942710936aef"><computeroutput>_internalDateTime</computeroutput></ulink><computeroutput>(uint16_t * date,uint16_t * time)</computeroutput> | <computeroutput>public void</computeroutput><ulink url="#Logger_8h_1adee29828901ea1b4f99ce305fa3e17bd"><computeroutput>wakeUpNow</computeroutput></ulink><computeroutput>()</computeroutput> | <computeroutput>public void</computeroutput><ulink url="#Logger_8h_1a1a3b380e75d68eef4c3913816773e1b5"><computeroutput>wakeUpNow_tip</computeroutput></ulink><computeroutput>()</computeroutput> | <computeroutput>public void</computeroutput><ulink url="#Logger_8h_1a9c215a00c214c880d04481d256d8d522"><computeroutput>_ISR_void</computeroutput></ulink><computeroutput>()</computeroutput> | <computeroutput>public void</computeroutput><ulink url="#Logger_8h_1aa2e4ccb5b638347db4da535aac7ac209"><computeroutput>_anemometer_count_increment</computeroutput></ulink><computeroutput>()</computeroutput> | <computeroutput>public void</computeroutput><ulink url="#Logger_8h_1a7551515cf6f018df3d8d942710936aef"><computeroutput>_internalDateTime</computeroutput></ulink><computeroutput>(uint16_t * date,uint16_t * time)</computeroutput> | <computeroutput>class</computeroutput><ulink url="#classLogger"><computeroutput>Logger</computeroutput></ulink> |</para><para><heading level="2">Members</heading>
</para><para><heading level="4"><computeroutput>define</computeroutput><ulink url="#Logger_8cpp_1ae70baf5399951da1e7ad45a0ed890832"><computeroutput>cbi</computeroutput></ulink></heading>
</para><para><heading level="4"><computeroutput>define</computeroutput><ulink url="#Logger_8cpp_1ac4a5536d9bf092116f88b94797ddc882"><computeroutput>sbi</computeroutput></ulink></heading>
</para><para><heading level="4"><computeroutput>public void</computeroutput><ulink url="#Logger_8cpp_1adee29828901ea1b4f99ce305fa3e17bd"><computeroutput>wakeUpNow</computeroutput></ulink><computeroutput>()</computeroutput></heading>
</para><para><heading level="4"><computeroutput>public void</computeroutput><ulink url="#Logger_8cpp_1a1a3b380e75d68eef4c3913816773e1b5"><computeroutput>wakeUpNow_tip</computeroutput></ulink><computeroutput>()</computeroutput></heading>
</para><para><heading level="4"><computeroutput>public void</computeroutput><ulink url="#Logger_8cpp_1a9c215a00c214c880d04481d256d8d522"><computeroutput>_ISR_void</computeroutput></ulink><computeroutput>()</computeroutput></heading>
</para><para><heading level="4"><computeroutput>public void</computeroutput><ulink url="#Logger_8cpp_1aa2e4ccb5b638347db4da535aac7ac209"><computeroutput>_anemometer_count_increment</computeroutput></ulink><computeroutput>()</computeroutput></heading>
</para><para><heading level="4"><computeroutput>public void</computeroutput><ulink url="#Logger_8cpp_1a144189fccfe80979cc2fcafefdf2728a"><computeroutput>save_Aref</computeroutput></ulink><computeroutput>(float _V)</computeroutput></heading>
</para><para><heading level="4"><computeroutput>public float</computeroutput><ulink url="#Logger_8cpp_1ae9bf4d0d2809a902be80dbf825844636"><computeroutput>read_Aref</computeroutput></ulink><computeroutput>()</computeroutput></heading>
</para><para><heading level="4"><computeroutput>public void</computeroutput><ulink url="#Logger_8cpp_1a7551515cf6f018df3d8d942710936aef"><computeroutput>_internalDateTime</computeroutput></ulink><computeroutput>(uint16_t * date,uint16_t * time)</computeroutput></heading>
</para><para><heading level="4"><computeroutput>public void</computeroutput><ulink url="#Logger_8h_1adee29828901ea1b4f99ce305fa3e17bd"><computeroutput>wakeUpNow</computeroutput></ulink><computeroutput>()</computeroutput></heading>
</para><para><heading level="4"><computeroutput>public void</computeroutput><ulink url="#Logger_8h_1a1a3b380e75d68eef4c3913816773e1b5"><computeroutput>wakeUpNow_tip</computeroutput></ulink><computeroutput>()</computeroutput></heading>
</para><para><heading level="4"><computeroutput>public void</computeroutput><ulink url="#Logger_8h_1a9c215a00c214c880d04481d256d8d522"><computeroutput>_ISR_void</computeroutput></ulink><computeroutput>()</computeroutput></heading>
</para><para><heading level="4"><computeroutput>public void</computeroutput><ulink url="#Logger_8h_1aa2e4ccb5b638347db4da535aac7ac209"><computeroutput>_anemometer_count_increment</computeroutput></ulink><computeroutput>()</computeroutput></heading>
</para><para><heading level="4"><computeroutput>public void</computeroutput><ulink url="#Logger_8h_1a7551515cf6f018df3d8d942710936aef"><computeroutput>_internalDateTime</computeroutput></ulink><computeroutput>(uint16_t * date,uint16_t * time)</computeroutput></heading>
</para><para><heading level="1">class <computeroutput><ref refid="classLogger" kindref="compound">Logger</ref></computeroutput></heading>
</para><para><heading level="2">Summary</heading>
</para><para><table rows="2" cols="2"><row>
<entry thead="yes"><para>Members </para></entry><entry thead="yes"><para>Descriptions  </para></entry></row>
<row>
<entry thead="no"><para><computeroutput>public</computeroutput><ulink url="#classLogger_1abc41bfb031d896170c7675fa96a6b30c"><computeroutput>Logger</computeroutput></ulink><computeroutput>()</computeroutput> </para></entry><entry thead="no"><para><ulink url="#classLogger">Logger</ulink> library for the Arduino-based ALog data logger. </para></entry></row>
</table>
<computeroutput>public void</computeroutput><ulink url="#classLogger_1a635c5dc0046646bec7023ef7133f0eb3"><computeroutput>initialize</computeroutput></ulink><computeroutput>(char * _logger_name,char * _datafilename,int _hourInterval,int _minInterval,int _secInterval,bool _ext_int,bool _LOG_ON_BUCKET_TIP)</computeroutput> | <computeroutput>public void</computeroutput><ulink url="#classLogger_1ab5e0bd543758c65a17b77553a0e9f0c9"><computeroutput>setupLogger</computeroutput></ulink><computeroutput>()</computeroutput> | <computeroutput>public void</computeroutput><ulink url="#classLogger_1ad90ff8f29410f6b70cc6334391400a4e"><computeroutput>sleep</computeroutput></ulink><computeroutput>()</computeroutput> | <computeroutput>public void</computeroutput><ulink url="#classLogger_1ad28cf6450ada04f0e1475998bede5b88"><computeroutput>goToSleep_if_needed</computeroutput></ulink><computeroutput>()</computeroutput> | <computeroutput>public void</computeroutput><ulink url="#classLogger_1a4a6c78dd1715b33ae4bbd6f66f116f77"><computeroutput>startLogging</computeroutput></ulink><computeroutput>()</computeroutput> | <computeroutput>public void</computeroutput><ulink url="#classLogger_1aa82814d61687debcf3b8dd6f46c9d549"><computeroutput>endLogging</computeroutput></ulink><computeroutput>()</computeroutput> | <computeroutput>public void</computeroutput><ulink url="#classLogger_1af936c7f58e23316abb5614cbd31c7ced"><computeroutput>startAnalog</computeroutput></ulink><computeroutput>()</computeroutput> | <computeroutput>public void</computeroutput><ulink url="#classLogger_1adca7be8a63592263c67f63766680d16f"><computeroutput>endAnalog</computeroutput></ulink><computeroutput>()</computeroutput> | <computeroutput>public bool</computeroutput><ulink url="#classLogger_1acc758b6fdaac8099c492929aa7f1691d"><computeroutput>get_use_sleep_mode</computeroutput></ulink><computeroutput>()</computeroutput> | <computeroutput>public float</computeroutput><ulink url="#classLogger_1a343fcabefb37e06429865a2e6a6e708a"><computeroutput>readPin</computeroutput></ulink><computeroutput>(int pin)</computeroutput> | <computeroutput>public float</computeroutput><ulink url="#classLogger_1a4e67526c65fa865f276a515a200af4aa"><computeroutput>readPinOversample</computeroutput></ulink><computeroutput>(int pin,int bits)</computeroutput> | <computeroutput>public float</computeroutput><ulink url="#classLogger_1ad8296890a14a0df83c2433a20f25b899"><computeroutput>analogReadOversample</computeroutput></ulink><computeroutput>(int pin,uint8_t adc_bits,int nsamples,bool debug)</computeroutput> | <computeroutput>public float</computeroutput><ulink url="#classLogger_1a55d923b98a6c503fccb25bfd4af32f3d"><computeroutput>thermistorB</computeroutput></ulink><computeroutput>(float R0,float B,float Rref,float T0degC,int thermPin,uint8_t ADC_resolution_nbits,bool Rref_on_GND_side,bool oversample_debug,bool record_results)</computeroutput> | <computeroutput>public void</computeroutput><ulink url="#classLogger_1a362a1462166d63ddc613eaa1e86f9854"><computeroutput>ultrasonicMB_analog_1cm</computeroutput></ulink><computeroutput>(int nping,int EX,int sonicPin,bool writeAll)</computeroutput> | <computeroutput>public float</computeroutput><ulink url="#classLogger_1a87ce56cb9c3dfc7abfd6308b2ee7dc10"><computeroutput>maxbotixHRXL_WR_Serial</computeroutput></ulink><computeroutput>(int Ex,int nping,bool writeAll,int maxRange,bool RS232)</computeroutput> | <computeroutput>public void</computeroutput><ulink url="#classLogger_1a3ce2869bbd48fdebbf44e155981c85b0"><computeroutput>maxbotixHRXL_WR_analog</computeroutput></ulink><computeroutput>(int nping,int sonicPin,int EX,bool writeAll,uint8_t ADC_resolution_nbits)</computeroutput> | <computeroutput>public void</computeroutput><ulink url="#classLogger_1a40ae372dee7f672a6d6f33ab441e4da1"><computeroutput>Decagon5TE</computeroutput></ulink><computeroutput>(int excitPin,int dataPin)</computeroutput> | <computeroutput>public void</computeroutput><ulink url="#classLogger_1a84da6a9ec3d4d56fdc32d950b71f1a26"><computeroutput>DecagonGS1</computeroutput></ulink><computeroutput>(int pin,float Vref,uint8_t ADC_resolution_nbits)</computeroutput> | <computeroutput>public void</computeroutput><ulink url="#classLogger_1ab1ae31b2bdb77c86fb6851907258171b"><computeroutput>vdivR</computeroutput></ulink><computeroutput>(int pin,float Rref,uint8_t ADC_resolution_nbits,bool Rref_on_GND_side)</computeroutput> | <computeroutput>public void</computeroutput><ulink url="#classLogger_1a95670d06ec3b68300895cd7bf8c37999"><computeroutput>linearPotentiometer</computeroutput></ulink><computeroutput>(int linpotPin,float Rref,float slope,char * _distance_units,float intercept,uint8_t ADC_resolution_nbits,bool Rref_on_GND_side)</computeroutput> | <computeroutput>public void</computeroutput><ulink url="#classLogger_1a4ccff7a14a6bddc8bb28e22b3b36d3cc"><computeroutput>HTM2500LF_humidity_temperature</computeroutput></ulink><computeroutput>(int humidPin,int thermPin,float Rref_therm,uint8_t ADC_resolution_nbits)</computeroutput> | <computeroutput>public void</computeroutput><ulink url="#classLogger_1a62b74ddb3cf9fdd7dae2394c1b245ed4"><computeroutput>HM1500LF_humidity_with_external_temperature</computeroutput></ulink><computeroutput>(int humidPin,float R0_therm,float B_therm,float Rref_therm,float T0degC_therm,int thermPin_therm,uint8_t ADC_resolution_nbits)</computeroutput> | <computeroutput>public void</computeroutput><ulink url="#classLogger_1a80fdea5a339573980f9544ac64678411"><computeroutput>Inclinometer_SCA100T_D02_analog_Tcorr</computeroutput></ulink><computeroutput>(int xPin,int yPin,float Vref,float Vsupply,float R0_therm,float B_therm,float Rref_therm,float T0degC_therm,int thermPin_therm,uint8_t ADC_resolution_nbits)</computeroutput> | <computeroutput>public void</computeroutput><ulink url="#classLogger_1a6c6a43a1b86f88c2a5e33d14c992e510"><computeroutput>Anemometer_reed_switch</computeroutput></ulink><computeroutput>(int interrupt_pin_number,unsigned long reading_duration_milliseconds,float meters_per_second_per_rotation)</computeroutput> | <computeroutput>public void</computeroutput><ulink url="#classLogger_1a31c3cba5ff5722fb66bf540bfbe8b25d"><computeroutput>Wind_Vane_Inspeed</computeroutput></ulink><computeroutput>(int vanePin)</computeroutput> | <computeroutput>public void</computeroutput><ulink url="#classLogger_1ae4190ce7ccfd7b148a6151102a3bf93d"><computeroutput>Pyranometer</computeroutput></ulink><computeroutput>(int analogPin,float raw_mV_per_W_per_m2,float gain,float V_ref,uint8_t ADC_resolution_nbits)</computeroutput> | <computeroutput>public void</computeroutput><ulink url="#classLogger_1a40588117a274f0c6de926ef6ce1f0ba8"><computeroutput>Barometer_BMP180</computeroutput></ulink><computeroutput>()</computeroutput> | <computeroutput>public void</computeroutput><ulink url="#classLogger_1a98f3cc370c87d1e1eaf3eb6a7e0f1623"><computeroutput>_sensor_function_template</computeroutput></ulink><computeroutput>(int pin,float param1,float param2,int ADC_bits,bool flag)</computeroutput> | <computeroutput>public void</computeroutput><ulink url="#classLogger_1a923b296832bd4222da649ebc66427ac1"><computeroutput>HackHD</computeroutput></ulink><computeroutput>(int control_pin,bool want_camera_on)</computeroutput> | <computeroutput>public float</computeroutput><ulink url="#classLogger_1a9808967fdf91f10602aa883df35145b3"><computeroutput>Honeywell_HSC_analog</computeroutput></ulink><computeroutput>(int pin,float Vsupply,float Vref,float Pmin,float Pmax,int TransferFunction_number,int units,uint8_t ADC_resolution_nbits)</computeroutput> |</para><para><heading level="2">Members</heading>
</para><para><heading level="4"><computeroutput>public</computeroutput><ulink url="#classLogger_1abc41bfb031d896170c7675fa96a6b30c"><computeroutput>Logger</computeroutput></ulink><computeroutput>()</computeroutput></heading>
</para><para><ulink url="#classLogger">Logger</ulink> library for the Arduino-based ALog data logger.</para><para>ALog data logger library: methods to:</para><para><itemizedlist>
<listitem><para>Initialize the data logger</para></listitem><listitem><para>Sleep and wake</para></listitem><listitem><para>Interact with the real-time clock (RTC)</para></listitem><listitem><para>Write data to the SD card</para></listitem><listitem><para>Manage power</para></listitem><listitem><para>Interact with a range of sensors</para></listitem></itemizedlist>
</para><para>All help documentation here assumes you have created an instance of the &quot;Logger&quot; <programlisting><codeline><highlight class="normal">logger<sp/><ref refid="classLogger" kindref="compound">Logger</ref>();</highlight></codeline>
</programlisting></para><para><heading level="4"><computeroutput>public void</computeroutput><ulink url="#classLogger_1a635c5dc0046646bec7023ef7133f0eb3"><computeroutput>initialize</computeroutput></ulink><computeroutput>(char * _logger_name,char * _datafilename,int _hourInterval,int _minInterval,int _secInterval,bool _ext_int,bool _LOG_ON_BUCKET_TIP)</computeroutput></heading>
</para><para><heading level="4"><computeroutput>public void</computeroutput><ulink url="#classLogger_1ab5e0bd543758c65a17b77553a0e9f0c9"><computeroutput>setupLogger</computeroutput></ulink><computeroutput>()</computeroutput></heading>
</para><para><heading level="4"><computeroutput>public void</computeroutput><ulink url="#classLogger_1ad90ff8f29410f6b70cc6334391400a4e"><computeroutput>sleep</computeroutput></ulink><computeroutput>()</computeroutput></heading>
</para><para><heading level="4"><computeroutput>public void</computeroutput><ulink url="#classLogger_1ad28cf6450ada04f0e1475998bede5b88"><computeroutput>goToSleep_if_needed</computeroutput></ulink><computeroutput>()</computeroutput></heading>
</para><para><heading level="4"><computeroutput>public void</computeroutput><ulink url="#classLogger_1a4a6c78dd1715b33ae4bbd6f66f116f77"><computeroutput>startLogging</computeroutput></ulink><computeroutput>()</computeroutput></heading>
</para><para><heading level="4"><computeroutput>public void</computeroutput><ulink url="#classLogger_1aa82814d61687debcf3b8dd6f46c9d549"><computeroutput>endLogging</computeroutput></ulink><computeroutput>()</computeroutput></heading>
</para><para><heading level="4"><computeroutput>public void</computeroutput><ulink url="#classLogger_1af936c7f58e23316abb5614cbd31c7ced"><computeroutput>startAnalog</computeroutput></ulink><computeroutput>()</computeroutput></heading>
</para><para><heading level="4"><computeroutput>public void</computeroutput><ulink url="#classLogger_1adca7be8a63592263c67f63766680d16f"><computeroutput>endAnalog</computeroutput></ulink><computeroutput>()</computeroutput></heading>
</para><para><heading level="4"><computeroutput>public bool</computeroutput><ulink url="#classLogger_1acc758b6fdaac8099c492929aa7f1691d"><computeroutput>get_use_sleep_mode</computeroutput></ulink><computeroutput>()</computeroutput></heading>
</para><para><heading level="4"><computeroutput>public float</computeroutput><ulink url="#classLogger_1a343fcabefb37e06429865a2e6a6e708a"><computeroutput>readPin</computeroutput></ulink><computeroutput>(int pin)</computeroutput></heading>
</para><para><heading level="4"><computeroutput>public float</computeroutput><ulink url="#classLogger_1a4e67526c65fa865f276a515a200af4aa"><computeroutput>readPinOversample</computeroutput></ulink><computeroutput>(int pin,int bits)</computeroutput></heading>
</para><para><heading level="4"><computeroutput>public float</computeroutput><ulink url="#classLogger_1ad8296890a14a0df83c2433a20f25b899"><computeroutput>analogReadOversample</computeroutput></ulink><computeroutput>(int pin,uint8_t adc_bits,int nsamples,bool debug)</computeroutput></heading>
</para><para><heading level="4"><computeroutput>public float</computeroutput><ulink url="#classLogger_1a55d923b98a6c503fccb25bfd4af32f3d"><computeroutput>thermistorB</computeroutput></ulink><computeroutput>(float R0,float B,float Rref,float T0degC,int thermPin,uint8_t ADC_resolution_nbits,bool Rref_on_GND_side,bool oversample_debug,bool record_results)</computeroutput></heading>
</para><para><heading level="4"><computeroutput>public void</computeroutput><ulink url="#classLogger_1a362a1462166d63ddc613eaa1e86f9854"><computeroutput>ultrasonicMB_analog_1cm</computeroutput></ulink><computeroutput>(int nping,int EX,int sonicPin,bool writeAll)</computeroutput></heading>
</para><para><heading level="4"><computeroutput>public float</computeroutput><ulink url="#classLogger_1a87ce56cb9c3dfc7abfd6308b2ee7dc10"><computeroutput>maxbotixHRXL_WR_Serial</computeroutput></ulink><computeroutput>(int Ex,int nping,bool writeAll,int maxRange,bool RS232)</computeroutput></heading>
</para><para><heading level="4"><computeroutput>public void</computeroutput><ulink url="#classLogger_1a3ce2869bbd48fdebbf44e155981c85b0"><computeroutput>maxbotixHRXL_WR_analog</computeroutput></ulink><computeroutput>(int nping,int sonicPin,int EX,bool writeAll,uint8_t ADC_resolution_nbits)</computeroutput></heading>
</para><para><heading level="4"><computeroutput>public void</computeroutput><ulink url="#classLogger_1a40ae372dee7f672a6d6f33ab441e4da1"><computeroutput>Decagon5TE</computeroutput></ulink><computeroutput>(int excitPin,int dataPin)</computeroutput></heading>
</para><para><heading level="4"><computeroutput>public void</computeroutput><ulink url="#classLogger_1a84da6a9ec3d4d56fdc32d950b71f1a26"><computeroutput>DecagonGS1</computeroutput></ulink><computeroutput>(int pin,float Vref,uint8_t ADC_resolution_nbits)</computeroutput></heading>
</para><para><heading level="4"><computeroutput>public void</computeroutput><ulink url="#classLogger_1ab1ae31b2bdb77c86fb6851907258171b"><computeroutput>vdivR</computeroutput></ulink><computeroutput>(int pin,float Rref,uint8_t ADC_resolution_nbits,bool Rref_on_GND_side)</computeroutput></heading>
</para><para><heading level="4"><computeroutput>public void</computeroutput><ulink url="#classLogger_1a95670d06ec3b68300895cd7bf8c37999"><computeroutput>linearPotentiometer</computeroutput></ulink><computeroutput>(int linpotPin,float Rref,float slope,char * _distance_units,float intercept,uint8_t ADC_resolution_nbits,bool Rref_on_GND_side)</computeroutput></heading>
</para><para><heading level="4"><computeroutput>public void</computeroutput><ulink url="#classLogger_1a4ccff7a14a6bddc8bb28e22b3b36d3cc"><computeroutput>HTM2500LF_humidity_temperature</computeroutput></ulink><computeroutput>(int humidPin,int thermPin,float Rref_therm,uint8_t ADC_resolution_nbits)</computeroutput></heading>
</para><para><heading level="4"><computeroutput>public void</computeroutput><ulink url="#classLogger_1a62b74ddb3cf9fdd7dae2394c1b245ed4"><computeroutput>HM1500LF_humidity_with_external_temperature</computeroutput></ulink><computeroutput>(int humidPin,float R0_therm,float B_therm,float Rref_therm,float T0degC_therm,int thermPin_therm,uint8_t ADC_resolution_nbits)</computeroutput></heading>
</para><para><heading level="4"><computeroutput>public void</computeroutput><ulink url="#classLogger_1a80fdea5a339573980f9544ac64678411"><computeroutput>Inclinometer_SCA100T_D02_analog_Tcorr</computeroutput></ulink><computeroutput>(int xPin,int yPin,float Vref,float Vsupply,float R0_therm,float B_therm,float Rref_therm,float T0degC_therm,int thermPin_therm,uint8_t ADC_resolution_nbits)</computeroutput></heading>
</para><para><heading level="4"><computeroutput>public void</computeroutput><ulink url="#classLogger_1a6c6a43a1b86f88c2a5e33d14c992e510"><computeroutput>Anemometer_reed_switch</computeroutput></ulink><computeroutput>(int interrupt_pin_number,unsigned long reading_duration_milliseconds,float meters_per_second_per_rotation)</computeroutput></heading>
</para><para><heading level="4"><computeroutput>public void</computeroutput><ulink url="#classLogger_1a31c3cba5ff5722fb66bf540bfbe8b25d"><computeroutput>Wind_Vane_Inspeed</computeroutput></ulink><computeroutput>(int vanePin)</computeroutput></heading>
</para><para><heading level="4"><computeroutput>public void</computeroutput><ulink url="#classLogger_1ae4190ce7ccfd7b148a6151102a3bf93d"><computeroutput>Pyranometer</computeroutput></ulink><computeroutput>(int analogPin,float raw_mV_per_W_per_m2,float gain,float V_ref,uint8_t ADC_resolution_nbits)</computeroutput></heading>
</para><para><heading level="4"><computeroutput>public void</computeroutput><ulink url="#classLogger_1a40588117a274f0c6de926ef6ce1f0ba8"><computeroutput>Barometer_BMP180</computeroutput></ulink><computeroutput>()</computeroutput></heading>
</para><para><heading level="4"><computeroutput>public void</computeroutput><ulink url="#classLogger_1a98f3cc370c87d1e1eaf3eb6a7e0f1623"><computeroutput>_sensor_function_template</computeroutput></ulink><computeroutput>(int pin,float param1,float param2,int ADC_bits,bool flag)</computeroutput></heading>
</para><para><heading level="4"><computeroutput>public void</computeroutput><ulink url="#classLogger_1a923b296832bd4222da649ebc66427ac1"><computeroutput>HackHD</computeroutput></ulink><computeroutput>(int control_pin,bool want_camera_on)</computeroutput></heading>
</para><para><heading level="4"><computeroutput>public float</computeroutput><ulink url="#classLogger_1a9808967fdf91f10602aa883df35145b3"><computeroutput>Honeywell_HSC_analog</computeroutput></ulink><computeroutput>(int pin,float Vsupply,float Vref,float Pmin,float Pmax,int TransferFunction_number,int units,uint8_t ADC_resolution_nbits)</computeroutput></heading>
</para><para>Generated by <ulink url="https://sourcey.com/moxygen">Moxygen</ulink> </para>    </detaileddescription>
  </compounddef>
</doxygen>
